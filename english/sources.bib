@article{BYLANDER1996241,
title = {A probabilistic analysis of prepositional STRIPS planning},
journal = {Artificial Intelligence},
volume = {81},
number = {1},
pages = {241-271},
year = {1996},
note = {Frontiers in Problem Solving: Phase Transitions and Complexity},
issn = {0004-3702},
doi = {https://doi.org/10.1016/0004-3702(95)00055-0},
url = {https://www.sciencedirect.com/science/article/pii/0004370295000550},
author = {Tom Bylander},
keywords = {Planning, STRIPS, Average-case analysis, PSPACE-complete},
abstract = {I present a probabilistic analysis of prepositional STRIPS planning. The analysis considers two assumptions. One is that each possible precondition (likewise postcondition) of an operator is selected independently of other pre- and postconditions. The other is that each operator has a fixed number of preconditions (likewise postconditions). Under both assumptions, I derive bounds for when it is highly likely that a planning instance can be efficiently solved, either by finding a plan or proving that no plan exists. Roughly, if planning instances under either assumption have n propositions (ground atoms) and g goals, and the number of operators is less than an O(n In g) bound, then a simple, efficient algorithm can prove that no plan exists for most instances. If the number of operators is greater than an Ω(n In g) bound, then a simple, efficient algorithm can find a plan for most instances. The two bounds differ by a factor that is exponential in the number of pre- and postconditions. A similar result holds for plan modification, i.e., solving a planning instance that is close to another planning instance with a known plan. Thus it appears that prepositional STRIPS planning, a PSPACE-complete problem, exhibits a easy-hard-easy pattern as the number of available operators increases with a narrow range of hard problems. An empirical study demonstrates this pattern for particular parameter values. Because prepositional STRIPS planning is PSPACE-complete, this extends previous phase transition analyses, which have focused on NP-complete problems. Also, the analysis shows that surprisingly simple algorithms can solve a large subset of the planning problem.}
}

@incollection{ROSENSCHEIN1988187,
title = {Synchronization of Multi-Agent Plans},
editor = {Alan H. Bond and Les Gasser},
booktitle = {Readings in Distributed Artificial Intelligence},
publisher = {Morgan Kaufmann},
pages = {187-191},
year = {1988},
isbn = {978-0-934613-63-7},
doi = {https://doi.org/10.1016/B978-0-934613-63-7.50020-6},
url = {https://www.sciencedirect.com/science/article/pii/B9780934613637500206},
author = {Jeffrey S. Rosenschein},
abstract = {Consider an intelligent agent constructing a plan to be executed by several other agents; correct plan execution will often require that actions be taken in a specific sequence. Therefore, the planner cannot simply tell each agent what action to perform; explicit mechanisms must exist for maintaining the execution sequence. This paper outlines such mechanisms. A framework for multiple-agent planning is developed, consisting of several parts. First, a formalism is adopted for representing knowledge about other agents' beliefs and goals, and is extended to allow representation of their capabilities. Communication primitives are defined that allow selective acceptance of goals and facts, and an explicit means of inducing an agent to perform an act is introduced. Finally, the ordering mechanisms (consisting of sequencing operators and a planning heuristic) arc presented, along with a specific example of their use.}
}

@article{SEMIZ2021220,
title = {Incremental multi-agent path finding},
journal = {Future Generation Computer Systems},
volume = {116},
pages = {220-233},
year = {2021},
issn = {0167-739X},
doi = {https://doi.org/10.1016/j.future.2020.09.032},
url = {https://www.sciencedirect.com/science/article/pii/S0167739X19331784},
author = {Fatih Semiz and Faruk Polat},
keywords = {Multi-agent path finding, Multi-agent planning, Incremental path planning},
abstract = {Existing multi-agent path finding (MAPF) algorithms are offline methods that aim at finding conflict-free paths for more than one agent. In many real-life applications it is possible that a multi-agent plan cannot be fully executed due to some changes in the environment (represented as a graph), or in missions in which the agents are involved. Even in the case of a minor change, the offline planning algorithm must be re-started from scratch to generate a new plan, and this often requires a substantial amount of time. Motivated by this real-life requirement, we introduced the Incremental Multi-Agent Path Finding (I-MAPF) problem. Any location (node) in the initial environment (graph) can become unavailable for some time and then become available again. Agents can be informed about these changes before they occur and some agents have to update their plans if they planned to use that location. The Conflict Based Search (CBS) is one of most the successful algorithms in solving MAPF problems. To our best knowledge, there are no currently existing studies that attempt at solving the I-MAPF problem. In this paper, we propose a new method to solve the I-MAPF problem, called CBS-D*-lite. CBS-D*-lite is built upon CBS and avoids re-planning for agents that are not affected by the environmental changes. To achieve this, CBS-D*-lite employs D*-lite, an incremental single-agent path-finding algorithm as the lower-level search method in CBS. We show that the number of time-steps required to solve a problem is generally lower than with regular CBS. Empirically, we show that the CBS-D*-lite provided faster results than regular CBS, and the total cost provided CBS-D*-lite is generally close to the total cost values provided by the regular CBS when there are environmental changes.}
}

@article{BONET20015,
title = {Planning as heuristic search},
journal = {Artificial Intelligence},
volume = {129},
number = {1},
pages = {5-33},
year = {2001},
issn = {0004-3702},
doi = {https://doi.org/10.1016/S0004-3702(01)00108-4},
url = {https://www.sciencedirect.com/science/article/pii/S0004370201001084},
author = {Blai Bonet and Héctor Geffner},
keywords = {Planning, Strips, Heuristic search, Domain-independent heuristics, Forward/backward search, Non-optimal planning, Graphplan},
abstract = {In the AIPS98 Planning Contest, the hsp planner showed that heuristic search planners can be competitive with state-of-the-art Graphplan and sat planners. Heuristic search planners like hsp transform planning problems into problems of heuristic search by automatically extracting heuristics from Strips encodings. They differ from specialized problem solvers such as those developed for the 24-Puzzle and Rubik's Cube in that they use a general declarative language for stating problems and a general mechanism for extracting heuristics from these representations. In this paper, we study a family of heuristic search planners that are based on a simple and general heuristic that assumes that action preconditions are independent. The heuristic is then used in the context of best-first and hill-climbing search algorithms, and is tested over a large collection of domains. We then consider variations and extensions such as reversing the direction of the search for speeding node evaluation, and extracting information about propositional invariants for avoiding dead-ends. We analyze the resulting planners, evaluate their performance, and explain when they do best. We also compare the performance of these planners with two state-of-the-art planners, and show that the simplest planner based on a pure best-first search yields the most solid performance over a large set of problems. We also discuss the strengths and limitations of this approach, establish a correspondence between heuristic search planning and Graphplan, and briefly survey recent ideas that can reduce the current gap in performance between general heuristic search planners and specialized solvers.}
}

@article{LABORIE2003151,
title = {Algorithms for propagating resource constraints in AI planning and scheduling: Existing approaches and new results},
journal = {Artificial Intelligence},
volume = {143},
number = {2},
pages = {151-188},
year = {2003},
issn = {0004-3702},
doi = {https://doi.org/10.1016/S0004-3702(02)00362-4},
url = {https://www.sciencedirect.com/science/article/pii/S0004370202003624},
author = {Philippe Laborie},
keywords = {Scheduling, AI planning, Constraint programming, Cumulative resources},
abstract = {This paper summarizes the main existing approaches to propagate resource constraints in Constraint-Based scheduling and identifies some of their limitations for using them in an integrated planning and scheduling framework. We then describe two new algorithms to propagate resource constraints on discrete resources and reservoirs. Unlike most of the classical work in scheduling, our algorithms focus on the precedence relations between activities rather than on their absolute position in time. They are efficient even when the set of activities is not completely defined and when the time window of activities is large. These features explain why our algorithms are particularly suited for integrated planning and scheduling approaches. All our algorithms are illustrated with examples. Encouraging preliminary results are reported on pure scheduling problems as well as some possible extensions of our framework.}
}

@article{BENTON2009562,
title = {Anytime heuristic search for partial satisfaction planning},
journal = {Artificial Intelligence},
volume = {173},
number = {5},
pages = {562-592},
year = {2009},
note = {Advances in Automated Plan Generation},
issn = {0004-3702},
doi = {https://doi.org/10.1016/j.artint.2008.11.010},
url = {https://www.sciencedirect.com/science/article/pii/S0004370208001872},
author = {J. Benton and Minh Do and Subbarao Kambhampati},
keywords = {Planning, Heuristics, Partial satisfaction, Search},
abstract = {We present a heuristic search approach to solve partial satisfaction planning (PSP) problems. In these problems, goals are modeled as soft constraints with utility values, and actions have costs. Goal utility represents the value of each goal to the user and action cost represents the total resource cost (e.g., time, fuel cost) needed to execute each action. The objective is to find the plan that maximizes the trade-off between the total achieved utility and the total incurred cost; we call this problem PSP Net Benefit. Previous approaches to solving this problem heuristically convert PSP Net Benefit into STRIPS planning with action cost by pre-selecting a subset of goals. In contrast, we provide a novel anytime search algorithm that handles soft goals directly. Our new search algorithm has an anytime property that keeps returning better quality solutions until the termination criteria are met. We have implemented this search algorithm, along with relaxed plan heuristics adapted to PSP Net Benefit problems, in a forward state-space planner called SapaPS. An adaptation of SapaPS, called YochanPS, received a “distinguished performance” award in the “simple preferences” track of the 5th International Planning Competition.}
}

@article{BRAFMAN201352,
title = {On the complexity of planning for agent teams and its implications for single agent planning},
journal = {Artificial Intelligence},
volume = {198},
pages = {52-71},
year = {2013},
issn = {0004-3702},
doi = {https://doi.org/10.1016/j.artint.2012.08.005},
url = {https://www.sciencedirect.com/science/article/pii/S0004370212001051},
author = {Ronen I. Brafman and Carmel Domshlak},
keywords = {Classical planning, Multi-agent planning, Complexity, Tree-width},
abstract = {If the complexity of planning for a single agent is described by some function f of the input, how much more difficult is it to plan for a team of n cooperating agents? If these agents are completely independent, we can simply solve n single agent problems, scaling linearly with the number of agents. But if all the agents interact tightly, we really need to solve a single problem that is n times larger, which could be exponentially (in n) harder to solve. Is a more general characterization possible? To formulate this question precisely, we minimally extend the standard STRIPS model to describe multi-agent planning problems. Then, we identify two problem parameters that help us answer our question. The first parameter is independent of the precise task the multi-agent system should plan for, and it captures the structure of the possible direct interactions between the agents via the tree-width of a graph induced by the team. The second parameter is task-dependent, and it captures the minimal number of interactions by the “most interacting” agent in the team that is needed to solve the problem. We show that multi-agent planning problems can be solved in time exponential only in these parameters. Thus, when these parameters are bounded, the complexity scales only polynomially in the size of the agent team. These results also have direct implications for the single-agent case: by casting single-agent planning tasks as multi-agent planning tasks, we can devise novel methods for decomposition-based planning for single agents. We analyze one such method, and use the techniques developed to provide some of the strongest tractability results for classical single-agent planning to date.}
}

@article{JONSSON201436,
title = {Limitations of acyclic causal graphs for planning},
journal = {Artificial Intelligence},
volume = {210},
pages = {36-55},
year = {2014},
issn = {0004-3702},
doi = {https://doi.org/10.1016/j.artint.2014.02.002},
url = {https://www.sciencedirect.com/science/article/pii/S0004370214000198},
author = {Anders Jonsson and Peter Jonsson and Tomas Lööw},
keywords = {Planning, Computational complexity},
abstract = {Causal graphs are widely used in planning to capture the internal structure of planning instances. Researchers have paid special attention to the subclass of planning instances with acyclic causal graphs, which in the past have been exploited to generate hierarchical plans, to compute heuristics, and to identify classes of planning instances that are easy to solve. This naturally raises the question of whether planning is easier when the causal graph is acyclic. In this article we show that the answer to this question is no, proving that in the worst case, the problem of plan existence is PSPACE-complete even when the causal graph is acyclic. Since the variables of the planning instances in our reduction are propositional, this result applies to Strips planning with negative preconditions. We show that the reduction still holds if we restrict actions to have at most two preconditions. Having established that planning is hard for acyclic causal graphs, we study two subclasses of planning instances with acyclic causal graphs. One such subclass is described by propositional variables that are either irreversible or symmetrically reversible. Another subclass is described by variables with strongly connected domain transition graphs. In both cases, plan existence is bounded away from PSPACE, but in the latter case, the problem of bounded plan existence is hard, implying that optimal planning is significantly harder than satisficing planning for this class.}
}

@article{SHARON201540,
title = {Conflict-based search for optimal multi-agent pathfinding},
journal = {Artificial Intelligence},
volume = {219},
pages = {40-66},
year = {2015},
issn = {0004-3702},
doi = {https://doi.org/10.1016/j.artint.2014.11.006},
url = {https://www.sciencedirect.com/science/article/pii/S0004370214001386},
author = {Guni Sharon and Roni Stern and Ariel Felner and Nathan R. Sturtevant},
keywords = {Heuristic search, Multi-agent, Pathfinding},
abstract = {In the multi-agent pathfinding problem (MAPF) we are given a set of agents each with respective start and goal positions. The task is to find paths for all agents while avoiding collisions. Most previous work on solving this problem optimally has treated the individual agents as a single ‘joint agent’ and then applied single-agent search variants of the A* algorithm. In this paper we present the Conflict Based Search (CBS) a new optimal multi-agent pathfinding algorithm. CBS is a two-level algorithm that does not convert the problem into the single ‘joint agent’ model. At the high level, a search is performed on a Conflict Tree (CT) which is a tree based on conflicts between individual agents. Each node in the CT represents a set of constraints on the motion of the agents. At the low level, fast single-agent searches are performed to satisfy the constraints imposed by the high level CT node. In many cases this two-level formulation enables CBS to examine fewer states than A* while still maintaining optimality. We analyze CBS and show its benefits and drawbacks. Additionally we present the Meta-Agent CBS (MA-CBS) algorithm. MA-CBS is a generalization of CBS. Unlike basic CBS, MA-CBS is not restricted to single-agent searches at the low level. Instead, MA-CBS allows agents to be merged into small groups of joint agents. This mitigates some of the drawbacks of basic CBS and further improves performance. In fact, MA-CBS is a framework that can be built on top of any optimal and complete MAPF solver in order to enhance its performance. Experimental results on various problems show a speedup of up to an order of magnitude over previous approaches.}
}

@article{STOLBA2017175,
title = {The MADLA planner: Multi-agent planning by combination of distributed and local heuristic search},
journal = {Artificial Intelligence},
volume = {252},
pages = {175-210},
year = {2017},
issn = {0004-3702},
doi = {https://doi.org/10.1016/j.artint.2017.08.007},
url = {https://www.sciencedirect.com/science/article/pii/S0004370217301042},
author = {Michal Štolba and Antonín Komenda},
keywords = {Multi-agent planning, Privacy-preserving, Automated planning, Multi-agent systems, State-space search, Multi-heuristic search, MA-STRIPS},
abstract = {Real world applications often require cooperation of multiple independent entities. Classical planning is a well established technique solving various challenging problems such as logistic planning, factory process planning, military mission planning and high-level planning for robots. Multi-agent planning aims at solving similar problems in the presence of multiple independent entities (agents). Even though such entities might want to cooperate in order to fulfill a common goal, they may want to keep their internal information and processes private. In such case, we talk about privacy-preserving multi-agent planning. So far, multi-agent planners based on heuristic search used either a local heuristic estimating the particular agent's local subproblem or a distributed heuristic estimating the global problem as a whole. In this paper, we present the Multi-Agent Distributed and Local Asynchronous (MADLA) Planner, running a novel variant of a distributed state-space forward-chaining multi-heuristic search which combines the use of a local and a distributed heuristic in order to combine their benefits. In particular, the planner uses two variants of the well known Fast-Forward heuristic. We provide proofs of soundness and completeness of the search algorithm and show how much and what type of privacy it preserves. We also provide an improved privacy-preserving distribution scheme for the Fast-Forward heuristic. We experimentally compare the newly proposed multi-heuristic scheme and the two used heuristics separately. The results show that the proposed solution outperforms classical (single-heuristic) distributed search with either one of the heuristics used separately. In the detailed experimental analysis, we show limits of the planner and of the used heuristics based on particular properties of the benchmark domains. In a comprehensive set of multi-agent planning domains and problems, we show that the MADLA Planner outperforms all contemporary state-of-the-art privacy-preserving multi-agent planners using a compatible planning model.}
}

@article{BLUM1997281,
title = {Fast planning through planning graph analysis},
journal = {Artificial Intelligence},
volume = {90},
number = {1},
pages = {281-300},
year = {1997},
issn = {0004-3702},
doi = {https://doi.org/10.1016/S0004-3702(96)00047-1},
url = {https://www.sciencedirect.com/science/article/pii/S0004370296000471},
author = {Avrim L. Blum and Merrick L. Furst},
keywords = {General purpose planning, STRIPS planning, Graph algorithms, Planning graph analysis},
abstract = {We introduce a new approach to planning in STRIPS-like domains based on constructing and analyzing a compact structure we call a planning graph. We describe a new planner, Graphplan, that uses this paradigm. Graphplan always returns a shortest possible partial-order plan, or states that no valid plan exists. We provide empirical evidence in favor of this approach, showing that Graphplan outperforms the total-order planner, Prodigy and the partial-order planner, UCPOP, on a variety of interesting natural and artificial planning problems. We also give empirical evidence that the plans produced by Graphplan are quite sensible. Since searches made by this approach are fundamentally different from the searches of other common planning methods, they provide a new perspective on the planning problem.}
}

@article{PAJARESFERRANDO201322,
title = {Context-Aware Multi-Agent Planning in intelligent environments},
journal = {Information Sciences},
volume = {227},
pages = {22-42},
year = {2013},
issn = {0020-0255},
doi = {https://doi.org/10.1016/j.ins.2012.11.021},
url = {https://www.sciencedirect.com/science/article/pii/S0020025512007748},
author = {Sergio {Pajares Ferrando} and Eva Onaindia},
keywords = {Context-aware reasoning, Ambient intelligence, Multi-agent planning, Defeasible argumentation},
abstract = {A system is context-aware if it can extract, interpret and use context information and adapt its functionality to the current context of use. Multi-agent planning generalizes the problem of planning in domains where several agents plan and act together, and share resources, activities, and goals. This contribution presents a practical extension of a formal theoretical model for Context-Aware Multi-Agent Planning based upon an argumentation-based defeasible logic. Our framework, named CAMAP, is implemented on a platform for open multi-agent systems and has been experimentally tested, among others, in applications of ambient intelligence in the field of health-care. CAMAP is based on a multi-agent partial-order planning paradigm in which agents have diverse abilities, use an argumentation-based defeasible contextual reasoning to support their own beliefs and refute the beliefs of the others according to their context knowledge during the plan search process. CAMAP shows to be an adequate approach to tackle ambient intelligence problems as it gathers together in a single framework the ability of planning while it allows agents to put forward arguments that support or argue upon the accuracy, unambiguity and reliability of the context-aware information.}
}

@article{BRAHIMI2014187,
title = {Partially centralized approach for dynamic hierarchical-plans merging},
journal = {Neurocomputing},
volume = {146},
pages = {187-198},
year = {2014},
note = {Bridging Machine learning and Evolutionary Computation (BMLEC) Computational Collective Intelligence},
issn = {0925-2312},
doi = {https://doi.org/10.1016/j.neucom.2014.04.063},
url = {https://www.sciencedirect.com/science/article/pii/S092523121400808X},
author = {Said Brahimi and Ramdane Maamri and Zaidi Sahnoun},
keywords = {Hierarchical plan merging, Multi-agent tasks organization, Partially centralized coordination, Planning-execution interleaving},
abstract = {The design of multi-agent systems evolving in complex and dynamic environments requires using a flexible scheme for coordinating and executing agents plans. This paper aims to provide an approach for dynamic coordination taking advantage of the hierarchical plans representation and the ability to reasoning on abstract tasks. The concept of abstraction here are central, by ignoring some less important details, a solution can be found more simply. Our contribution is hence including two complementary aspects. The first contribution focuses on the definition of a representation model supporting the decentralized and flexible execution of multi-agent plans. In a second contribution, we use the obtained model to provide a hierarchical scheme for agents coordinating. Viewed as a hierarchical-like structure of coordination cells (CC), this scheme allows the merge, in partially centralized way, the agents׳ plans. Based on the ability to localize the interference between tasks supported by our model, the global plan is dynamically decomposed to set of partial-global-plan that may be analyzed in a decentralized manner. This hybridization, between centralized and distributed coordination, can favor the interleaving of planning and execution, some part of global plan can be repaired when others are in execution.}
}

@article{AYLETT200061,
title = {AI planning: solutions for real world problems},
journal = {Knowledge-Based Systems},
volume = {13},
number = {2},
pages = {61-69},
year = {2000},
issn = {0950-7051},
doi = {https://doi.org/10.1016/S0950-7051(00)00047-2},
url = {https://www.sciencedirect.com/science/article/pii/S0950705100000472},
author = {R.S Aylett and G.J Petley and P.W.H Chung and B Chen and D.W Edwards},
keywords = {Artificial intelligence planning, Chemical plant operating procedures, Knowledge engineering},
abstract = {This paper argues that AI planning is a technology ripe for use on real world problems as shown by a number of current applications. An introduction is given to AI planning, and then followed by discussion of the successful application of this technology to generating operating procedures for chemical plants. A description is given of the methodology for developing planning domains and finally the results of its application to operating procedure synthesis are discussed.}
}

@article{MORENO2002285,
title = {Integrating AI planning techniques with workflow management system},
journal = {Knowledge-Based Systems},
volume = {15},
number = {5},
pages = {285-291},
year = {2002},
issn = {0950-7051},
doi = {https://doi.org/10.1016/S0950-7051(01)00167-8},
url = {https://www.sciencedirect.com/science/article/pii/S0950705101001678},
author = {M.D.R.- Moreno and P. Kearney},
keywords = {AI Planning techniques, Workflow Management Systems, Contingent planners},
abstract = {There is a variety of applications that can benefit from the ability to find optimal or good solutions to a proposed problem, automatically. The artificial intelligent (AI) community has been actively involved in efficient problem-solving in complex domains such as military or spacecraft problems with successful results. In this paper, we describe the integration of AI planning techniques with an existing workflow management system. We show how these techniques can improve the overall system functionality and help automate the definition of business processes. The work is based on a short study carried out at BT research laboratories as part of a larger programme that aims to provide technologies for a new generation of business support systems.}
}

@article{VAQUERO20131967,
title = {Post-design analysis for building and refining AI planning systems},
journal = {Engineering Applications of Artificial Intelligence},
volume = {26},
number = {8},
pages = {1967-1979},
year = {2013},
issn = {0952-1976},
doi = {https://doi.org/10.1016/j.engappai.2013.04.006},
url = {https://www.sciencedirect.com/science/article/pii/S0952197613000729},
author = {Tiago Stegun Vaquero and José Reinaldo Silva and J. Christopher Beck},
keywords = {System design, Knowledge engineering, Artificial intelligence planning, Modeling, Post-design},
abstract = {The growth of industrial applications of artificial intelligence has raised the need for design tools to aid in the conception and implementation of such complex systems. The design of automated planning systems faces several engineering challenges including the proper modeling of the domain knowledge: the creation of a model that represents the problem to be solved, the world that surrounds the system, and the ways the system can interact with and change the world in order to solve the problem. Knowledge modeling in AI planning is a hard task that involves acquiring the system requirements and making design decisions that can determine the behavior and performance of the resulting system. In this paper we investigate how knowledge acquired during a post-design phase of modeling can be used to improve the prospective model. A post-design framework is introduced which combines a knowledge engineering tool and a virtual prototyping environment for the analysis and simulation of plans. This framework demonstrates that post-design analysis supports the discovery of missing requirements and can guide the model refinement cycle. We present three case studies using benchmark domains and eight state-of-the-art planners. Our results demonstrate that significant improvements in plan quality and an increase in planning speed of up to three orders of magnitude can be achieved through a careful post-design process. We argue that such a process is critical for the deployment of AI planning technology in real-world engineering applications.}
}

@article{PIRA2020103684,
title = {A novel approach to solve AI planning problems in graph transformations},
journal = {Engineering Applications of Artificial Intelligence},
volume = {92},
pages = {103684},
year = {2020},
issn = {0952-1976},
doi = {https://doi.org/10.1016/j.engappai.2020.103684},
url = {https://www.sciencedirect.com/science/article/pii/S0952197620301214},
author = {Einollah Pira},
keywords = {Bayesian Optimization Algorithm, AI planning, Graph transformation system, Bayesian network, Refinement},
abstract = {The aim of AI planning is to solve the problems with no exact solution available. These problems usually have a big search space, and planning may not find plans with the least actions and in the shortest time. Recent researches show that using suitable heuristics can help to find desired plans. In planning problems specified formally through graph transformation system (GTS), there are dependencies between applied rules (actions) in the search space. This fact motivates us to solve the planning problem for a small goal (instead of the main goal), extract dependencies from the searched space, and use these dependencies to solve the planning problem for the main goal. In GTS based systems, the nodes of a state (really is a graph) can be grouped due to their type. To create a small (refined) goal, we use a refinement technique to remove the predefined percent of nodes from each group of the main goal. Bayesian Optimization Algorithm (BOA) is then used to solve the planning problem for the refined goal. BOA is an Estimation of Distribution Algorithm (EDA) in which Bayesian networks are used to evolve the solution populations. Actually, a Bayesian network is learned from the current population, and then this network is employed to generate the next population. Since the last Bayesian network learned in BOA has the knowledge about dependencies between applied rules, this network can be used to solve the planning problem for the main goal. Experimental results on four well-known planning domains confirm that the proposed approach finds plans with the least actions and in the lower time compared with the state-of-the-art approaches.}
}

@article{KOMENDA201476,
title = {Domain-independent multi-agent plan repair},
journal = {Journal of Network and Computer Applications},
volume = {37},
pages = {76-88},
year = {2014},
issn = {1084-8045},
doi = {https://doi.org/10.1016/j.jnca.2012.12.011},
url = {https://www.sciencedirect.com/science/article/pii/S1084804512002585},
author = {Antonín Komenda and Peter Novák and Michal Pěchouček},
keywords = {Multi-agent plan repair, Decentralized multi-agent planning, Communication complexity, Experimental evaluation},
abstract = {Achieving joint objectives in distributed domain-independent planning problems by teams of cooperative agents requires significant coordination and communication efforts. For systems facing a plan failure in a dynamic environment, arguably, attempts to repair the failed plan in general, and especially in the worst-case scenarios, do not straightforwardly bring any benefit in terms of time complexity. However, in multi-agent settings, the communication complexity might be of a much higher importance, possibly a high communication overhead might be even prohibitive in certain domains. We hypothesize that in decentralized systems, where frequent coordination is required to achieve joint objectives, attempts to repair failed multi-agent plans should lead to lower communication overhead than replanning from scratch. Here, we formally introduce the multi-agent plan repair problem. Building upon the formal treatment, we present the core hypothesis underlying our work and subsequently describe three algorithms for multi-agent plan repair reducing the problem to specialized instances of the multi-agent planning problem. Finally, we present an experimental validation, results of which confirm the core hypothesis of the paper. Our rigorous treatment of the problem and experimental results pave the way for both further analytical, as well algorithmic investigations of the problem.}
}

@article{BIUNDO2011219,
title = {Advanced user assistance based on AI planning},
journal = {Cognitive Systems Research},
volume = {12},
number = {3},
pages = {219-236},
year = {2011},
note = {Special Issue on Complex Cognition},
issn = {1389-0417},
doi = {https://doi.org/10.1016/j.cogsys.2010.12.005},
url = {https://www.sciencedirect.com/science/article/pii/S1389041710000835},
author = {Susanne Biundo and Pascal Bercher and Thomas Geier and Felix Müller and Bernd Schattenberg},
keywords = {Cognitive technical systems, Companion-technology, Hybrid planning, Plan repair, Plan explanation, Real-world planning},
abstract = {Artificial Intelligence technologies enable the implementation of cognitive systems with advanced planning and reasoning capabilities. This article presents an approach to use hybrid planning – a method that combines reasoning about procedural knowledge and causalities – to provide user-centered assistance. Based on a completely declarative description of actions, tasks, and solution methods, hybrid planning allows for the generation of knowledge-rich plans of action. The information those plans comprise includes causal dependencies between actions on both abstract and primitive levels as well as information about their hierarchical and temporal relationships. We present the hybrid planning approach in detail and show its potential by describing the realization of various assistance functionalities based on complex cognitive processes like the generation, repair, and explanation of plans. Advanced user assistance is demonstrated by means of a practical application scenario where an innovative electronic support mechanism helps a user to operate a complex mobile communication device.}
}

@article{XU2023101861,
title = {Hierarchical multi-agent planning for flexible assembly of large-scale lunar facilities},
journal = {Advanced Engineering Informatics},
volume = {55},
pages = {101861},
year = {2023},
issn = {1474-0346},
doi = {https://doi.org/10.1016/j.aei.2022.101861},
url = {https://www.sciencedirect.com/science/article/pii/S1474034622003196},
author = {Rui Xu and Yuting Zhao and Zhaoyu Li and Shengying Zhu and Zixuan Liang and Yue Gao},
keywords = {Multi-robot flexible assembly, Large-scale lunar facility, Distributed multi-agent planning, Hierarchical task graph, Two-sided matching game},
abstract = {Several national space agencies and commercial aerospace companies plan to set up lunar bases with large-scale facilities that rely on multiple lunar robots’ assembly. Mission planning is necessary to achieve efficient multi-robot cooperation. This paper aims at autonomous multi-robot planning for the flexible assembly of the large-scale lunar facility, considering the harsh lunar environment, mission time optimization, and joint actions. The lunar robots and modules are scattered around the mission area without fixed assembly lines. Thus, the traditional assembly planning methods ignoring the optimal selection of modules are unable to handle this problem. We propose a hierarchical multi-agent planning method based on two-stage two-sided matching (HMAP-TTM) to solve this critical problem. First, the distributed planning framework with multi-replica public agents is introduced, ensuring robot plan knowledge consistency through public agents’ communication. Second, the hierarchical task graph (HTG) divides the mission into task layers based on task dependency knowledge. Third, we develop a novel two-stage two-sided matching algorithm. Time-optimal plans emerge from the matching games among public and private agents in each layer of HTG. Agents make decisions in the game based on action knowledge updated during planning. Finally, an assembly mission is presented to prove the method’s effectiveness. The simulation results show that the HMAP-TTM can generate plans with shorter mission time and require smaller communication costs than the baseline methods.}
}

@article{GALUSZKA2007351,
title = {ON TRANSFORMATION OF STRIPS PLANNING PROBLEM},
journal = {IFAC Proceedings Volumes},
volume = {40},
number = {9},
pages = {351-355},
year = {2007},
note = {11th IFAC Symposium on Large Scale Complex Systems Theory and Applications},
issn = {1474-6670},
doi = {https://doi.org/10.3182/20070723-3-PL-2917.00057},
url = {https://www.sciencedirect.com/science/article/pii/S1474667015327397},
author = {Adam Galuszka},
keywords = {Linear Programming, Integer Programming, Planning, Computational methods, Transformations},
abstract = {STRIPS planning is a difficult computational problem. One way to increase efficiency of searching for a solution may be a transformation of a problem to another problem and then search for a solution of the transformed problem. In this work a simple STRIPS problem has been transformed to two problems: linear programming and linear equalities and inequalities. The transformation from planning to Linear Programming is based on mapping of conditions and operators in each plan step to variables. Truth-values of conditions are mapped to 0 and 1 values. For linear programming the objective function reaches the maximum if the goal situation is true in last step of planning. For inequalities and equalities the goal situation is mapped to equality constraints. The efficiency and quality of this approach has been analyzed and compared.}
}

@article{CHOUHAN2015396,
title = {Plan Restructuring in Multi Agent Planning},
journal = {Procedia Computer Science},
volume = {46},
pages = {396-401},
year = {2015},
note = {Proceedings of the International Conference on Information and Communication Technologies, ICICT 2014, 3-5 December 2014 at Bolgatty Palace & Island Resort, Kochi, India},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2015.02.036},
url = {https://www.sciencedirect.com/science/article/pii/S1877050915001003},
author = {Satyendra Singh Chouhan and Rajdeep Niyogi},
keywords = {Multi-agent planning, Plan restructuring, grid world domain;},
abstract = {In this paper we consider a multi agent planning problem where given a set of plans of the individual agents that may lead to conflict during execution, the task is to find a conflict-free plan for the agents. For this we give a formal model of the multi agent planning problem (MAPP) and give a description of the multi agent path planning. We demonstrate this technique in a grid world domain. The experimental results show promise for our method.}
}

