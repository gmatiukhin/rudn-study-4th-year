@incollection{DURFEE1988268,
title = {Coherent Cooperation Among Communicating Problem Solvers},
editor = {Alan H. Bond and Les Gasser},
booktitle = {Readings in Distributed Artificial Intelligence},
publisher = {Morgan Kaufmann},
pages = {268-284},
year = {1988},
isbn = {978-0-934613-63-7},
doi = {https://doi.org/10.1016/B978-0-934613-63-7.50031-0},
url = {https://www.sciencedirect.com/science/article/pii/B9780934613637500310},
author = {EDMUND H. DURFEE and VICTOR R. LESSER and DANIEL D. CORKILL},
abstract = {When (wo or more computing agents work on interacting tasks, their activities should be coordinated so that they cooperate coherently. Coherence is particularly problematic in domains where each agent has only a limited view of the overall task, where communication between agents is limited, and where there is no “controller” to coordinate the agents. Our approach to coherent cooperation in such domains is developed in the context of a distributed problem-solving network where agents cooperate to solve a single problem. The approach stresses the importance of sophisticated local control by which each problem-solving node integrates knowledge of the problem domain with (meta-level) knowledge about network coordination. This allows nodes to make rapid, intelligent local decisions based on changing problem characteristics with only a limited amount of intercommunication to coordinate these decisions. We describe three mechanisms that improve network coherence: 1) an organizational structure that provides a long-term framework for network coordination to guide each node's local control decisions; 2) a planner at each node that develops sequences of problem-solving activities based on the current situation; and 3) meta-level communication about the current state of local problem solving that enables nodes to dynamically refine the organization. We present a variety of problem-solving situations to show the benefits and limitations of these mechanisms, and we provide simulation results showing the mechanisms to be particularly cost effective in more complex problem-solving situations. We also discuss how these mechanisms might be of more general use in other distributed computing applications.}
}